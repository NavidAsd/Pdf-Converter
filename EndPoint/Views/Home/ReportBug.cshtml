@inject Microsoft.Extensions.Options.IOptions<EndPoint.Models.GoogleCaptchaConfigModel> GoogleCaptchaConfig
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Header{
    <link rel="canonical" href="@Common.GetPath.GetDomainHttps()/report-bug/" />
    @await Component.InvokeAsync("GetMetaTags", "ReportBug")
    <link href="~/Sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <script src="https://www.google.com/recaptcha/api.js?hl=en"></script>
}

<br />
<br />

<!-- start main -->
<main>
    <br />
    <br />
    <div class="container">
        <div class="section main-rate-page-box">
            <div class="main-rate-page-content">
                <div class="container">
                    <div class="row justify-content-center text-center">
                        <div class="col-7 mb-3">
                            <h1>Report Bug</h1>
                            <p>If you encounter any problems in the program process, thank you for reporting to us to improve performance</p>
                            <p>Also, if you have any questions about how the services work, you can read the <a href="/questions/">FAQ</a> first</p>
                        </div>
                    </div>
                    <div class="row justify-content-center text-start">
                        <div class="col-12 col-lg-6">
                            <form id="msgform" action="javascript:void(0);">

                                <div class="mb-3 mt-3">
                                    <input type="email" class="form-control" id="Emailaddress" placeholder=" Email Address">
                                </div>
                                <div class="mb-3 mt-3">
                                    <label class="form-label" for="Url"> The address of the page where you found the problem </label>
                                    <input type="url" class="form-control" id="Url" placeholder=" Url">
                                </div>
                                <div class="mb-3 mt-3">
                                    <textarea class="form-control" id="Problem" rows="5" placeholder="Problem statement"></textarea>
                                </div>
                                <input type="hidden" id="cpth" style="display:none" />
                                <div class="mb-3 mt-3">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                        </div>
                                    </div>
                                </div>
                                <label class="p-checkbox--inline">
                                    <input style="cursor:pointer" type="checkbox" class="p-checkbox__input" aria-labelledby="inlineCheckbox3label" id="chbox">
                                    <span class="p-checkbox__label" id="inlineCheckbox3label">I’ve read and accepted the <a href="/terms-of-use">Terms & Conditions</a> and <a href="/privacy">Privacy Policy</a>.</span>
                                </label>                                
                                <button class="btn btn-outline-primary w-100" onclick="SendMessage()">Send</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- end home main -->
    </div>
</main>
<br />
<br />

<!-- end main -->
@section Scripts{
<!-- script -->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptchaConfig.Value.Google_SiteKey"></script>
<script src="~/js/jquery.min.js"></script>
<script src="~/js/bootstrap.bundle.min.js"></script>
<script src="~/Sweetalert2/sweetalert2.min.js"></script>

<script>
    grecaptcha.ready(function () {
        grecaptcha.execute('@GoogleCaptchaConfig.Value.Google_SiteKey', { action: 'submit' }).then(function (token) {
            document.getElementById("cpth").value = token;
        });
    });
</script>

<script>

    async function SendMessage() {
        if (document.getElementById("chbox").checked == false) {
            swal.fire(
                'warning',
                'Please read and accept the Terms and Conditions and Privacy Policy',
                'warning'
            );
            return;
        }
            var Data = new FormData();
        Data.append("Email", document.getElementById("Emailaddress").value);
        Data.append("Url", document.getElementById("Url").value);
        Data.append("Problem", document.getElementById("Problem").value);
        Data.append("Recaptcha", document.getElementById("cpth").value);

        await fetch('/Home/SaveReportedBug/', {
            method: "POST",
            body: Data
        })
            .then(response => response.json())
            .then((data) => {
                if (data.success) {
                    document.getElementById("Emailaddress").value = "";
                    document.getElementById("Url").value = "";
                    swal.fire(
                        "success",
                        data.message,
                        "success"
                    ).then(function (isConfirm) {
                        location.reload();
                    });
                }
                else {
                    swal.fire(
                        "warning",
                        data.message,
                        "warning"
                    );
                }
            })
    }

</script>
}