@model Common.ResultMessage<Application.Services.Query.ReturnFeatureDetails.ResultReturnFeatureDetailsDto>;
@inject Microsoft.Extensions.Options.IOptions<EndPoint.Models.GoogleCaptchaConfigModel> GoogleCaptchaConfig
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Header{
    <link rel="canonical" href="@Common.GetPath.GetDomainHttps()/delete-pdf-pages/" />
    @await Component.InvokeAsync("GetMetaTags", "DeletePdfPages")
    <link href="~/css/loading.css" rel="stylesheet" />
    <link href="~/css/Content.css" rel="stylesheet" />
    <link href="~/Sweetalert2/sweetalert2.min.css" rel="stylesheet" />
        <style>
        .upload .upload-files .body p b,
        .upload .upload-files .body p a {
            color: #0FC0C5 !important;
        }

        .upload .upload-files footer .importar,
        .upload .upload-files footer .upload-btn {
            color: #fff !important;
            background-color: #0FC0C5 !important;
        }

        .upload .upload-files footer .divider {
            border-top: solid 4px #0FC0C5;
        }

        .upload .upload-files header {
            background: #0FC0C5 !important;
        }

        .upload .upload-files footer .list-files .file .progress {
            background: linear-gradient(to left, #ffc92860, #0FC0C5) no-repeat;
        }

        .upload .upload-files footer .list-files .file .done {
            background: #0FC0C5
        }

        .checkbox-custom {
            opacity: 0;
            position: absolute;
        }

        .checkbox-custom, .checkbox-custom-label {
            display: inline-block;
            vertical-align: middle;
            margin: 5px;
            cursor: pointer;
        }

            .checkbox-custom + .checkbox-custom-label:before {
                content: '';
                background: #fff;
                border-radius: 5px;
                border: 2px solid #ddd;
                display: inline-block;
                vertical-align: middle;
                width: 10px;
                height: 10px;
                padding: 2px;
                margin-right: 10px;
                text-align: center;
            }

            .checkbox-custom:checked + .checkbox-custom-label:before {
                content: "";
                display: inline-block;
                width: 1px;
                height: 5px;
                border: solid blue;
                border-width: 0 3px 3px 0;
                transform: rotate(45deg);
                -webkit-transform: rotate(45deg);
                -ms-transform: rotate(45deg);
                border-radius: 0px;
                margin: 0px 15px 5px 5px;
            }
    </style>

    <script src="https://www.google.com/recaptcha/api.js?hl=en"></script>
}
<br />
<br />

<!-- start main -->
<main>
    <div class="container">
        <!-- start home main -->
        <div class="home-main text-center">

            <!-- start file upload box -->
            <div class="section main-file-upload-box">
                <div class="row align-items-center text-center">
                    <div class="col-12">
                        <div class="file-upload-box-header d-flex text-center align-items-center justify-content-center w-100 mt-5">
                            <svg style="width:34px;height:34px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0 4C0 1.79086 1.79086 0 4 0H20C22.2091 0 24 1.79086 24 4V20C24 22.2091 22.2091 24 20 24H4C1.79086 24 0 22.2091 0 20V4Z" fill="#0FC0C5"></path><path d="M8.5 8V5.5H15.5V8" stroke="white"></path><path d="M5 8.5H19" stroke="white"></path><path d="M8.5 18.5L7.5 10.5001L16.5 10.5L15.5 18.5H8.5Z" stroke="white"></path><path d="M10.5 12V16" stroke="white"></path><path d="M13.5 12V16" stroke="white"></path></svg>
                            <h1 class="h3 ms-3">Delete PDF Pages</h1>
                        </div>
                         <p>@Model.Enything.FirstParagraph</p>
                         <p>@Model.Enything.SecendParagraph</p>
                    </div>

                    <!-- upload file box -->
                    <div class="col-12">
                        <div class="upload">
                            <div class="upload-files">
                                <a onclick="select()" id="triggerFile">
                                    <header style="cursor:pointer" id="headertriggerFile">
                                        <p>
                                            <i class="fa fa-cloud-upload" aria-hidden="true"></i>
                                            <span class="up bi bi-cloud-arrow-up">Choose</span>
                                            <span class="load">File</span>
                                        </p>
                                    </header>
                                </a>
                                <i id="_Service" style="display:none">@Domain.Entities.Features.Organizers.DeletePdfPages</i>
                                <i id="_BaseService" style="display:none">@Domain.Entities.Logs.AllServicesLog.OrganizersLog</i>

                                <div class="body" id="drop">
                                    <i class="fa fa-file-text-o pointer-none" aria-hidden="true"></i>

                                    <p class="pointer-none"> Or Upload From </p>
                                    <input type="file" id="_upload" multiple="multiple" accept="application/pdf" />

                                    <!-- upload from -->
                                    <div class="upload-other-location">
                                        <div class="other-location-circle google-drive"><a href="/GoogleDrive/auth" data-bs-toggle="tooltip" data-bs-placement="top" title="Google Drive"></a></div>
                                        <div class="other-location-circle drop-box"><a href="#" data-bs-toggle="tooltip" data-bs-placement="top" title="DropBox"></a></div>
                                    </div>
                                </div>

                                <footer>
                                    <div class="divider">
                                        <span><AR>FILE</AR></span>
                                    </div>
                                    <div class="list-files">
                                        <!--   template   -->
                                    </div>
                                    <div>
                                        <button onclick="SendData()" class="up-convert-btn upload-btn btn visually-hidden" data-bs-toggle="modal" data-bs-target="#youremailmodal">
                                            <span class="btn-text">Upload</span>
                                        </button>

                                        <button id="btnUpdateFiles" class="importar btn" title="Reset"><img width="25" src="~/images/pdftoconverter-reset.png" style="cursor:pointer" /></button>

                                        <div class="btn-sniper btn">
                                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                        </div>
                                        
                                    </div>
                                </footer>
                                <footer id="choose" style="display:none">
                                    <p>File SuccessFully Uploaded </p>
                                    <button data-bs-target="#SelectPages" class="upload-btn active btn" data-bs-toggle="modal">Choose Pages</button>
                                </footer>
                                <!--Loading part-->
                                <div id="_Loading" style="display:none">
                                    <svg class="w-0">
                                        <defs>
                                            <filter id="w-0">
                                                <feGaussianBlur in="SourceGraphic" stdDeviation="7" result="blur" />
                                                <feColorMatrix in="blur"
                                                               mode="matrix"
                                                               values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 20 -10"
                                                               result="res" />
                                                <feComposite in="SourceGraphic" in2="res" operator="atop" />
                                            </filter>
                                        </defs>
                                    </svg>

                                    <svg class="f-w-0" width="200" height="200" viewBox="0 0 200 200">
                                        <defs>
                                            <linearGradient id="linear-gradient">
                                                <stop class="stop1" offset="0" />
                                                <stop class="stop2" offset="1" />
                                            </linearGradient>
                                            <linearGradient y2="160"
                                                            x2="160"
                                                            y1="40"
                                                            x1="40"
                                                            gradientUnits="userSpaceOnUse"
                                                            id="gradient"
                                                            xlink:href="#linear-gradient" />
                                        </defs>

                                        <path class="path-class"
                                              d="m 164,100 c 0,-35.346224 -28.65378,-64 -64,-64 -35.346224,0 -64,28.653776
           -64,64 0,35.34622 28.653776,64 64,64 35.34622,0 64,-26.21502 64,-64
           0,-37.784981 -26.92058,-64 -64,-64 -37.079421,0 -65.267479,26.922736
           -64,64 1.267479,37.07726 26.703171,65.05317 64,64 37.29683,-1.05317
           64,-64 64,-64" />
                                        <circle class="cricle-class" cx="100" cy="100" r="64" />

                                    </svg>
                                      
                                     <div class="progress">
                                        <div class="progress-done" id="progressBar" data-done="70">
                                                                                    
                                         </div>
                                    </div>
                                     <h3 id="status"></h3><br>
                                    <p id="uploaded_progress"></p>
                      
                                    <p>Processing...</p>
                                    <a onclick="CancelProcess()" class="btn btn-outline-primary mt-4">Cancel</a>

                                </div>

                                <!-- download part -->
                                <div class="dropdown" id="_Download" style="display:none">
                                    <p>Pages SuccessFully Deleted</p>
                                    <button style="" class="btn btn-primary btn-lg dropdown-toggle px-5" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                        Download
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                        <li><a class="dropdown-item" href="#" id="btnDownload"> <i class="bi bi-hdd-fill" style="font-size: 1rem; color: crimson;"></i> Download</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#"> <i class="bi bi-google" style="font-size: 1rem; color: cornflowerblue;"></i> Send To GoogleDrive</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#"> <i class="bi bi-box2-heart-fill" style="font-size: 1rem; color: cornflowerblue;"></i> Send To DropBox</a></li><!-- or this bi bi-archive-fill -->
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" data-bs-toggle="modal" href="#AddEmail"> <i class="bi bi-envelope-paper-heart-fill" style="font-size: 1rem; color: crimson;"></i> Send To Your Email</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" target="_blank" href="#" id="btnDownloadLink"> <i class="bi bi-envelope-paper-heart-fill" style="font-size: 1rem; color: crimson;"></i> Download Link</a></li>
                                    </ul>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end file upload box -->
            <!-- start how work tools -->
            <div class="section main-how-work-tools-box">
                <div class="row justify-content-center text-center">


                    <div class="col-12 mb-5">

                        <h2>How To Delete Pdf Pages Online for Free</h2>
                        <p>You are only 3 steps away Delete Pdf Pages</p>
                    </div>

                    <div class="main-how-work-tools-content">
                        <div class="row align-items-center text-center">

                            <!-- how work tools step 1 -->
                            <div class="col-12 col-lg-4">
                                <div class="work-tools-step-card">
                                    <div class="step-card-counter">
                                        <div class="counter rounded-circle">1</div>
                                    </div>

                                    @if (ViewBag.ThreeStepHelp.Success)
                                    {
                                        <div class="step-card-body">
                                            @ViewBag.ThreeStepHelp.Enything.Step1
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="step-card-body">
                                            By clicking on the large box above, you can select the desired file from the files in your system, and it is acceptable if the file has the correct format
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- how work tools step 2 -->
                            <div class="col-12 col-lg-4">
                                <div class="work-tools-step-card">
                                    <div class="step-card-counter">
                                        <div class="counter rounded-circle">2</div>
                                    </div>
                                    <div class="step-card-body">
                                        @if (ViewBag.ThreeStepHelp.Success)
                                        {
                                            <div class="step-card-body">
                                                @ViewBag.ThreeStepHelp.Enything.Step2
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="step-card-body">
                                                Using the buttons below the large box, you can upload the file to start the process or go back to the previous step to change the file
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- how work tools step 3 -->
                            <div class="col-12 col-lg-4">
                                <div class="work-tools-step-card">
                                    <div class="step-card-counter">
                                        <div class="counter rounded-circle">3</div>
                                    </div>
                                    <div class="step-card-body">

                                        @if (ViewBag.ThreeStepHelp.Success)
                                        {
                                            <div class="step-card-body">
                                                @ViewBag.ThreeStepHelp.Enything.Step3
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="step-card-body">
                                                Processing does not take much time. After a few minutes, you can download the output file in 4 ways
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    @if (ViewBag.ThreeStepHelp.Enything.VideoName != null)
                    {
                        <h3>Video tutorial on how to Delete PDF Pages</h3>
                        <p>In this video, you will learn how to Delete PDF Pages in a few minutes</p>
                        string posterName = "How-to-Delete-pages-from-PDF-With-our-free-and-easy-to-use-tool.jpg";
                            <video poster="@Common.GetPath.GetHelpVideoPath().Replace("wwwroot", "")/poster/@posterName" alt="Help Video" title="Video tutorial on working with tools" style="max-height: @Common.GetPath.GetVideoSize(); position:center; background-color: #000;" controls class="video-help">
                            @foreach (var item in Common.Formating.VideosFormat)
                            {
                                <source src="@Common.GetPath.GetHelpVideoPath().Replace("wwwroot", "")/@ViewBag.ThreeStepHelp.Enything.VideoName" type="video/@item">
                            }
                            Your browser does not support the video display
                        </video>
                    }
                </div>
            </div>
            <!-- end how work tools -->
           
            <!-- start other content -->
            @await Component.InvokeAsync("GetAdditionalHelp",Domain.Entities.Features.Organizers.DeletePdfPages)
            <!-- end other content -->

            <!-- start section main services info box -->
            @await Component.InvokeAsync("GetHelpContext",Model)
            <!-- end section main services info box -->

                        <!--start blog posts slides-->
            @await Component.InvokeAsync("GetBlogPosts", @Domain.Entities.Features.Organizers.DeletePdfPages)
            <!--end blog posts slides-->
            <!-- end section main services info box -->
            @await Component.InvokeAsync("GetTools")
            @await Component.InvokeAsync("GetFAQ",ViewBag.FAQ)
            <!-- start sectin main people say about us -->
            <div class="section main-people-say-about-us">
                <div class="row justify-content-center text-center">
                    <div class="col-7">
                        <h3>The Best Online Delete PDF Pages</h3>
                        <h4>Some User Comments</h4>
                    </div>

                    <div class="main-people-saying-content">
                        <div class="row justify-content-center text-center">
                            <div class="col-7">
                                <div id="carouselExampleIndicators" class="carousel carousel-dark slide" data-bs-ride="carousel">
                                    <div class="carousel-indicators">
                                        @if (ViewBag.Comments.Success)
                                        {
                                            int cvv = 0;
                                            @for (int i = 1; i <= ViewBag.Comments.Enything.Count; i++)
                                            {

                                                if (cvv == 0)
                                                {
                                                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@cvv" class="active" aria-current="true" aria-label="Slide @i"></button>
                                                }
                                                else
                                                {
                                                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@cvv" aria-label="Slide @i"></button>
                                                }
                                                cvv += 1;
                                            }
                                        }
                                    </div>

                                    <div class="carousel-inner">
                                        @if (ViewBag.Comments.Success)
                                        {
                                            int cv = 1;
                                            string classname = "";
                                            @foreach (var item in ViewBag.Comments.Enything)
                                            {
                                                classname = cv == 1 ? "carousel-item active" : "carousel-item";
                                                <div class="@classname">
                                                    @{ cv = 0;}
                                                    <div class="people-saying-card">
                                                        <h5 class="person-fullname">@item.UserName</h5>
                                                        <div class="person-rate">
                                                            @for (int i = 1; i <= 5; i++)
                                                            {
                                                                @if (item.Rate + 1 > i)
                                                                {
                                                                    <i class="bi bi-star-fill" data-rating="@i"></i>
                                                                }
                                                                else
                                                                {
                                                                    <i class="bi bi-star" data-rating="@i"></i>
                                                                }
                                                            }
                                                        </div>
                                                        <p>@item.Message</p>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end sectin main people say about us -->
        </div>
        <!-- end home main -->
    </div>
</main>
<!-- end main -->
<!-- start rate this page -->
@await Component.InvokeAsync("GetRatingPart")
<!-- end rate this page -->
@section Scripts{
<!-- script -->
<script src="~/js/jquery.min.js"></script>
<script src="~/js/uploadfile-convert.js"></script>
<script src="~/js/bootstrap.bundle.min.js"></script>
<script src="~/Sweetalert2/sweetalert2.min.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptchaConfig.Value.Google_SiteKey"></script>

<script>
        grecaptcha.ready(function () {
            grecaptcha.execute('@GoogleCaptchaConfig.Value.Google_SiteKey', { action: 'submit' }).then(function (token) {
                document.getElementById("cpth").value = token;
            });
        });
</script>


<script>
    // rating page
    const ratingStars = [...document.getElementsByClassName("rating__star")];

    function executeRating(stars) {
        const starClassActive = "rating__star bi bi-star-fill";
        const starClassInactive = "rating__star bi bi-star";
        const starsLength = stars.length;
        let i;
        stars.map((star) => {
            star.onclick = () => {
                i = stars.indexOf(star);

                if (star.className === starClassInactive) {
                    for (i; i >= 0; --i) stars[i].className = starClassActive;
                } else {
                    for (i; i < starsLength; ++i) stars[i].className = starClassInactive;
                }
            };
        });
    }
    executeRating(ratingStars);

</script>

<script>
    var FileName = "";
    var Id = "";

    function Loading(State) {
        try {
            if (State == true) {
                document.getElementById("btnUpdateFiles").click();
                document.getElementById("_Loading").style.display = "unset";
                document.getElementById("choose").style.display = "none";
            }
            else {
                document.getElementById("_Loading").style.display = "none";
            }
        }
        catch { }
    }

    function SelectFile(State) {
        if (State == true) {
            document.getElementById("triggerFile").setAttribute('onclick', 'select()');
            document.getElementById("headertriggerFile").style.cursor = "pointer";
        }
        else {
            document.getElementById("triggerFile").setAttribute('onclick', '');
            document.getElementById("headertriggerFile").style.cursor = "wait";
            var old_element = document.getElementById("triggerFile");
            var new_element = old_element.cloneNode(true);
            old_element.parentNode.replaceChild(new_element, old_element);

        }
    }

    function Download(State, OutFile, Id) {
        if (State == true) {
            document.getElementById("_Download").style.display = "inherit";
            document.getElementById("btnDownload").href = "/Downloader/DownloadFile?OutFileName=" + OutFile + "&Id=" + Id + "&LogService=" + document.getElementById("_BaseService").textContent + "";
            document.getElementById("btnDownloadLink").href = "/download-link?OutFileName=" + OutFile + "&Id=" + Id + "&LogService=" + document.getElementById("_BaseService").textContent + "";
            document.getElementById("choose").style.display = "none";
        }
        else {
            document.getElementById("_Download").style.display = "none";
            document.getElementById("btnDownload").href = "#";
            document.getElementById("btnDownloadLink").href = "#";
        }
    }

    function OtherRowUpload(State) {
        if (State == false) {
            document.getElementById("drop").style.display = "none";
        }
    
    }

    function DeleteElemts() {
        var cv = 1;
        while (true) {
            try {
                $('#page' + cv).remove();
                $('#lbl' + cv).remove();
                cv += 1;
            }
            catch { break; }
        }
    }

        async function SendData() {
        var File = document.getElementById("_upload");
        var Filter = /(\.pdf|\.)$/i;
        if (!Filter.exec(File.value)) {
            swal.fire
                (
                    "warning",
                    "File Format Invalid",
                    "warning"
                );
            return;
        }
        var formData = new FormData();
        formData.append("file", File.files[0]);
        formData.append("Recaptcha", document.getElementById("cpth").value);
        Loading(true);
        SelectFile(false);
        Download(false);
        OtherRowUpload(false);

        var ajax = new XMLHttpRequest();
        ajax.upload.addEventListener("progress", progressHandler, false);
        ajax.addEventListener("load", completeHandler, false);
        ajax.addEventListener("error", errorHandler, false);
        ajax.addEventListener("abort", abortHandler, false);
        ajax.open("POST", "/Organize/GetPdfPagesUpload/");
        ajax.send(formData);

    }
function progressHandler(event) {
     var loaded = new Number((event.loaded / 1048576));//Make loaded a "number" and divide bytes to get Megabytes
    var total = new Number((event.total / 1048576));//Make total file size a "number" and divide bytes to get Megabytes
   // $("#uploaded_progress").innerHTML = "Uploaded <b>" + loaded.toPrecision(5) + "</b> Megabytes of " + total.toPrecision(5);//String output
	document.getElementById("uploaded_progress").innerHTML = "Uploaded <b>" + loaded.toPrecision(5) + "</b> Megabytes of " + total.toPrecision(5);
    var percent = (event.loaded / event.total) * 100;//Get percentage of upload progress
    //$("#progressBar").innerHTML = Math.round(percent);//Round value to solid
    document.getElementById("progressBar").innerHTML =  Math.round(percent);
    const progress = document.querySelector('.progress-done');
    progress.setAttribute("data-done" ,  Math.round(percent))
    progress.style.width = progress.getAttribute('data-done') + '%';
   // $("#status").innerHTML = Math.round(percent) + "% uploaded";//String output
   document.getElementById("status").innerHTML =  Math.round(percent) + "% uploaded";
}
function completeHandler(event) {
    Loading(false);
    SelectFile(true);
    const obj_upload_serv = JSON.parse(event.target.responseText)
    const progress = document.querySelector('#uploaded_progress');
    if(obj_upload_serv.success){
        $("#status").innerHTML = "Complate !";
        progress.style.display = "none"
                document.getElementById("FId").textContent = obj_upload_serv.enything.id;
                document.getElementById("choose").style.display = "unset";
                SetData(obj_upload_serv.enything.pageCount);
    } 
    else if (obj_upload_serv.enything == null) {
                OtherRowUpload(true);
                swal.fire(
                    "warning",
                    obj_upload_serv.message,
                    "warning"
                );
            }
    else {
                OtherRowUpload(true);
                //TryConvert(true, data.enything.filename, data.enything.userip);
                swal.fire(
                    "warning",
                    obj_upload_serv.message,
                    "warning"
                );
    }
}
function errorHandler(event) {
    $("#status").innerHTML = "Upload Failed";//Switch status to upload failed
}
function abortHandler(event) {
    $("#status").innerHTML = "Upload Aborted";//Switch status to aborted
}

    async function DeletePages() {
        var Data = new FormData();
        var cv = 0;
        var cc = 0;
            while (true) {
                try {
                    cc += 1;
                    if (document.getElementById("page" + cc).checked == true) {
                        Data.append("Pages", document.getElementById("lbl" + cc).name)
                        cv += 1;
                    }
                }
                catch { break; }
            }
        if (cv <= 0) {
            swal.fire(
                'warning',
                'You must select at least one page to delete',
                'warning'
            );
            return;
        }
        Data.append("_Id", document.getElementById("FId").textContent);
        Data.append("Recaptcha", document.getElementById("cpth").value);
        Loading(true);
        SelectFile(false);
        Download(false);
        OtherRowUpload(false);
        document.querySelector(".progress").style.display = "none"
        DeleteElemts();
        await fetch('/Organize/DeletePdfPages/', {
            method: "POST",
            body: Data
        })
            .then(response => response.json())
            .then((data) => {
                Loading(false);
                SelectFile(true);
                if (data.success) {
                    Download(true, data.enything.outFileName, data.enything.id);
                    FileName = data.enything.outFileName;
                    Id = data.enything.id;
                }
                else {
                    OtherRowUpload(true);
                    swal.fire(
                        "warning",
                        data.message,
                        "warning"
                    );
                }
            })
    }

    async function SubmitEmail() {
        var Data = new FormData();
        Data.append("FId", Id);
        Data.append("OutFileName", FileName);
        Data.append("UserEmail", document.getElementById('UserEmail').value);

        await fetch('/Organize/SendFileToEmail/', {
            method: "POST",
            body: Data
        })
            .then(response => response.json())
            .then((data) => {
                if (data.success) {
                    swal.fire(
                        "success",
                        data.message,
                        "success"
                    );
                }
                else {
                    swal.fire(
                        "warning",
                        data.message,
                        "warning"
                    );
                }
            })
    }

    async function SendMessage() {
        var Data = new FormData();
        Data.append("UserEmail", document.getElementById("Emailaddress").value);
        Data.append("UserName", document.getElementById("FullName").value);
        Data.append("Message", document.getElementById("Message").value);
        Data.append("Recaptcha", document.getElementById("cpth").value);
        Data.append("Service", document.getElementById("_Service").textContent);

        var rate = document.getElementsByClassName("rating__star bi bi-star-fill").length;
        if (rate == 0) { rate = null; }
        Data.append("Rate", rate);

        await fetch('/Organize/UserMessage/', {
            method: "POST",
            body: Data
        })
            .then(response => response.json())
            .then((data) => {
                if (data.success) {
                    document.getElementById("Emailaddress").value = "";
                    document.getElementById("FullName").value = "";
                    swal.fire(
                        "success",
                        data.message,
                        "success"
                    );
                }
                else {
                    swal.fire(
                        "warning",
                        data.message,
                        "warning"
                    );
                }
            })
    }

    function select() {
                                grecaptcha.execute('@GoogleCaptchaConfig.Value.Google_SiteKey', { action: 'submit' }).then(function (token) {
                        document.getElementById("cpth").value = token;
            });

        Download(false);
        Loading(false);
        OtherRowUpload(true);
        $("#_upload").click();
    }

    function SetData(Count) {
        grecaptcha.execute('@GoogleCaptchaConfig.Value.Google_SiteKey', { action: 'submit' }).then(function (token) {
            document.getElementById("cpth").value = token;
        });
        DeleteElemts();
        for (var i = 1; i <= Count; i++) {
            var input = document.createElement("input");
            input.id = "page" + i;
            input.name = "page" + i;
            input.className = "checkbox - custom";
            input.type = "checkbox";
            input.style = "cursor:pointer";
            input.title = "Page-" + i;
            document.getElementById("_filed").appendChild(input);
            var label = document.createElement("label");
            label.id = "lbl" + i;
            label.htmlFor = "page" + i;
            label.className = "checkbox-custom-label";
            label.textContent = i + " | ";
            label.title = "Page-" + i;
            label.name = i;
            document.getElementById("_filed").appendChild(label);
        }
    }

    function OpenAgain(Modal) {
        $('#' + Modal).modal('show');
    }

    function CancelProcess() {
        location.reload();
    }

</script>
}
@{
        string basic = Domain.Entities.Features.Organizers.DeletePdfPages + ".json";
    string SchemaFile = Common.Formating.StandardFaqSchemaFileName + basic;
    string SchemaHowToFile = Common.Formating.StandardHowToSchemaFileName + basic;
    string SchemaVideoFile = Common.Formating.StandardVideoSchemaFileName + basic;
}
@section Schemas{
                        <script type="application/ld+json">
        @Html.Raw(Common.Schema.SchemaReader.ReadToEnd(SchemaFile,true,Common.Schema.SchemaType.Faq))
        @Html.Raw(Common.Schema.SchemaReader.ReadToEnd(SchemaHowToFile,true,Common.Schema.SchemaType.HowTo))
        @Html.Raw(Common.Schema.SchemaReader.ReadToEnd(SchemaVideoFile,true,Common.Schema.SchemaType.Video))
                            </script>
}

@section Modals{
<!-- Modal Pages -->
<div class="modal fade" id="SelectPages" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Select the pages you want to delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="col-xl-12 col-lg-12 col-md-12 mb-1">
                    <form id="Details" action="javascript:void(0);">
                        <fieldset class="form-group">
                            <p id="FId" style="display:none"></p>
                            <div id="_filed"></div>
                        </fieldset>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <a class="btn btn-secondary" data-bs-dismiss="modal">Cancel</a>
                <a class="btn btn-primary" onclick="DeletePages()" data-bs-dismiss="modal">Delete Selected Pages</a>
            </div>
        </div>
    </div>
</div>

<!-- Modal Add Email -->
<div class="modal fade" id="AddEmail" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <p class="modal-title" id="exampleModalLongTitle">Send To Email</p>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="col-xl-12 col-lg-12 col-md-12 mb-1">
                    <form id="Details">
                        <fieldset class="form-group">

                            <input type="text" class="form-control" id="OutName" style="visibility:hidden">
                            <label for="basicInput">YourEmail</label>
                            <input type="email" class="form-control" id="UserEmail" placeholder="PdfConverter@example.com" required>
                            <input type="text" class="form-control" id="FId" style="visibility:hidden">
                        </fieldset>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <a class="btn btn-secondary" data-bs-dismiss="modal">Cancel</a>
                <a class="btn btn-primary" data-bs-dismiss="modal" onclick="SubmitEmail()">Submit</a>
            </div>
        </div>
    </div>
</div>
}
