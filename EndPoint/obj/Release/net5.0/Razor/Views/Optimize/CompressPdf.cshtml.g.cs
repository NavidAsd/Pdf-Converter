#pragma checksum "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d9d7dad59173e388baaeca787c8b662621d7262c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Optimize_CompressPdf), @"mvc.1.0.view", @"/Views/Optimize/CompressPdf.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\_ViewImports.cshtml"
using EndPoint;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\_ViewImports.cshtml"
using EndPoint.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d9d7dad59173e388baaeca787c8b662621d7262c", @"/Views/Optimize/CompressPdf.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d3cd8e7a4273f1e7f88356e8b76b3e7d2eb06234", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Optimize_CompressPdf : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Common.ResultMessage<Application.Services.Query.ReturnFeatureDetails.ResultReturnFeatureDetailsDto>>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/loading.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Content.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Sweetalert2/sweetalert2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("25"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/pdftoconverter-reset.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor:pointer"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/right_240px.webp"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("smaller"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("23"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Compressed"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/uploadfile-convert.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Sweetalert2/sweetalert2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("Details"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            DefineSection("Header", async() => {
                WriteLiteral("\n    <link rel=\"canonical\"");
                BeginWriteAttribute("href", " href=\"", 310, "\"", 363, 2);
#nullable restore
#line 8 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 317, Common.GetPath.GetDomainHttps(), 317, 32, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 349, "/compress-pdf/", 349, 14, true);
                EndWriteAttribute();
                WriteLiteral(" />\n    ");
#nullable restore
#line 9 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
Write(await Component.InvokeAsync("GetMetaTags", "CompressPdf"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d9d7dad59173e388baaeca787c8b662621d7262c10253", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d9d7dad59173e388baaeca787c8b662621d7262c11430", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d9d7dad59173e388baaeca787c8b662621d7262c12607", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        <style>
        .upload .upload-files .body p b,
        .upload .upload-files .body p a {
            color: #FFCA28 !important;
        }

        .upload .upload-files footer .importar,
        .upload .upload-files footer .upload-btn {
            color: #fff !important;
            background-color: #FFCA28 !important;
        }

        .upload .upload-files footer .divider {
            border-top: solid 4px #d8aa20;
        }

        .upload .upload-files header {
            background: #FFCA28 !important;
        }

        .upload .upload-files footer .list-files .file .progress {
            background: linear-gradient(to left, #ffc92860, #FFCA28) no-repeat;
        }

        .upload .upload-files footer .list-files .file .done {
            background: #FFCA28
        }
    </style>
    <script src=""https://www.google.com/recaptcha/api.js?hl=en""></script>
");
            }
            );
            WriteLiteral(@"<br />
<br />

<!-- start main -->
<main>
    <div class=""container"">
        <!-- start home main -->
        <div class=""home-main text-center"">

            <!-- start file upload box -->
            <div class=""section main-file-upload-box"">
                <div class=""row align-items-center text-center"">
                    <div class=""col-12"">
                        <div class=""file-upload-box-header d-flex text-center align-items-center justify-content-center w-100 mt-5"">
                            <svg style=""width:34px;height:34px"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M0 4C0 1.79086 1.79086 0 4 0H20C22.2091 0 24 1.79086 24 4V20C24 22.2091 22.2091 24 20 24H4C1.79086 24 0 22.2091 0 20V4Z"" fill=""#FFCA28""></path><path d=""M5.68718 5.68718L11.8787 7.23507L12 7.26539L12.1213 7.23507L18.3128 5.68718L16.7649 11.8787L16.7346 12L16.7649 12.1213L18.3128 18.3128L12.1213 16.7649L12 16.7346L11.8787 16.7649L5.68718 18.3128L7.23507 12.1213L7.26539 12L7.23507 11.8787L5.68718 5.");
            WriteLiteral("68718Z\" stroke=\"white\"></path></svg>\n                            <h1 class=\"h3 ms-3\">Compress PDF Files Online</h1>\n                        </div>\n                         <p>");
#nullable restore
#line 60 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                       Write(Model.Enything.FirstParagraph);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\n                         <p>");
#nullable restore
#line 61 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                       Write(Model.Enything.SecendParagraph);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>
                    </div>

                    <!-- upload file box -->
                    <div class=""col-12"" id=""dropContainer"">
                        <div class=""upload"">
                            <div class=""upload-files"">
                                <a onclick=""select()"" id=""triggerFile"">
                                    <header style=""cursor:pointer"" id=""headertriggerFile"">
                                        <p>
                                            <i class=""fa fa-cloud-upload"" aria-hidden=""true""></i>
                                            <span class=""up bi bi-cloud-arrow-up"">Choose</span>
                                            <span class=""load"">File</span>
                                        </p>
                                    </header>
                                </a>
                                <i id=""_Service"" style=""display:none"">");
#nullable restore
#line 77 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                 Write(Domain.Entities.Features.Optimizers.CompressPdf);

#line default
#line hidden
#nullable disable
            WriteLiteral("</i>\n                                <i id=\"_BaseService\" style=\"display:none\">");
#nullable restore
#line 78 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                     Write(Domain.Entities.Logs.AllServicesLog.OptimizersLog);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</i>
                                
                                <div class=""body"" id=""drop"">
                                    <i class=""fa fa-file-text-o pointer-none"" aria-hidden=""true""></i>

                                    <p class=""pointer-none""> Or Upload From </p>
                                    <input type=""file"" id=""_upload"" multiple=""multiple"" accept=""application/pdf"" />

                                    <!-- upload from -->
                                    <div class=""upload-other-location"">
                                        <div class=""other-location-circle google-drive""><a href=""/GoogleDrive/auth"" data-bs-toggle=""tooltip"" data-bs-placement=""top"" title=""Google Drive""></a></div>
                                        <div class=""other-location-circle drop-box""><a href=""#"" data-bs-toggle=""tooltip"" data-bs-placement=""top"" title=""DropBox""></a></div>
                                    </div>
                                </div>
                                <div class=""");
            WriteLiteral(@"g-signin2""></div>

                                <footer>
                                    <div class=""divider"">
                                        <span><AR>FILE</AR></span>
                                    </div>
                                    <div class=""list-files"">
                                        <!--   template   -->
                                    </div>
                                    <div>
                                        <button onclick=""SendData()"" class=""up-convert-btn upload-btn btn visually-hidden"" data-bs-toggle=""modal"" data-bs-target=""#youremailmodal"">
                                            <span class=""btn-text"">Upload and Compress</span>
                                        </button>

                                        <button id=""btnUpdateFiles"" class=""importar btn"" title=""Reset"">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d9d7dad59173e388baaeca787c8b662621d7262c20144", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</button>

                                        <div class=""btn-sniper btn"">
                                            <span class=""spinner-border spinner-border-sm"" role=""status"" aria-hidden=""true""></span>
                                        </div>
                                        
                                    </div>
                                </footer>

                                <!--Loading part-->
                                <div id=""_Loading"" style=""display:none"">
                                    <svg class=""w-0"">
                                        <defs>
                                            <filter id=""w-0"">
                                                <feGaussianBlur in=""SourceGraphic"" stdDeviation=""7"" result=""blur"" />
                                                <feColorMatrix in=""blur""
                                                               mode=""matrix""
                                                               values=""1 0 0 0 0 0 ");
            WriteLiteral(@"1 0 0 0 0 0 1 0 0 0 0 0 20 -10""
                                                               result=""res"" />
                                                <feComposite in=""SourceGraphic"" in2=""res"" operator=""atop"" />
                                            </filter>
                                        </defs>
                                    </svg>

                                    <svg class=""f-w-0"" width=""200"" height=""200"" viewBox=""0 0 200 200"">
                                        <defs>
                                            <linearGradient id=""linear-gradient"">
                                                <stop class=""stop1"" offset=""0"" />
                                                <stop class=""stop2"" offset=""1"" />
                                            </linearGradient>
                                            <linearGradient y2=""160""
                                                            x2=""160""
                                                            y1");
            WriteLiteral(@"=""40""
                                                            x1=""40""
                                                            gradientUnits=""userSpaceOnUse""
                                                            id=""gradient""
                                                            xlink:href=""#linear-gradient"" />
                                        </defs>

                                        <path class=""path-class""
                                              d=""m 164,100 c 0,-35.346224 -28.65378,-64 -64,-64 -35.346224,0 -64,28.653776
           -64,64 0,35.34622 28.653776,64 64,64 35.34622,0 64,-26.21502 64,-64
           0,-37.784981 -26.92058,-64 -64,-64 -37.079421,0 -65.267479,26.922736
           -64,64 1.267479,37.07726 26.703171,65.05317 64,64 37.29683,-1.05317
           64,-64 64,-64"" />
                                        <circle class=""cricle-class"" cx=""100"" cy=""100"" r=""64"" />

                                    </svg>
                                    <p>Processi");
            WriteLiteral(@"ng...</p>
                                    <a onclick=""CancelProcess()"" class=""btn btn-outline-primary mt-4"">Cancel</a>

                                </div>

                                <!-- download part -->
                                <div class=""dropdown"" id=""_Download"" style=""display:none"">
                                    <p>File SuccessFully Compressed</p>

                                    <p><strong><strong id=""InpSize""></strong><i> </i>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d9d7dad59173e388baaeca787c8b662621d7262c25066", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("<i> </i><strong id=\"OutSize\"></strong></strong></p>\n\n                                    <button");
            BeginWriteAttribute("style", " style=\"", 9586, "\"", 9594, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""btn btn-primary btn-lg dropdown-toggle px-5"" type=""button"" id=""dropdownMenuButton1"" data-bs-toggle=""dropdown"" aria-expanded=""false"">
                                        Download
                                    </button>
                                    <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
                                        <li><a class=""dropdown-item"" href=""#"" id=""btnDownload""> <i class=""bi bi-hdd-fill"" style=""font-size: 1rem; color: crimson;""></i> Download</a></li>
                                        <li><hr class=""dropdown-divider""></li>
                                        <li><a class=""dropdown-item"" href=""#""> <i class=""bi bi-google"" style=""font-size: 1rem; color: cornflowerblue;""></i> Send To GoogleDrive</a></li>
                                        <li><hr class=""dropdown-divider""></li>
                                        <li><a class=""dropdown-item"" href=""#""> <i class=""bi bi-box2-heart-fill"" style=""font-size: 1rem; color: cornflowerblue;");
            WriteLiteral(@"""></i> Send To DropBox</a></li><!-- or this bi bi-archive-fill -->
                                        <li><hr class=""dropdown-divider""></li>
                                        <li><a class=""dropdown-item"" data-bs-toggle=""modal"" href=""#AddEmail""> <i class=""bi bi-envelope-paper-heart-fill"" style=""font-size: 1rem; color: crimson;""></i> Send To Your Email</a></li>
                                        <li><hr class=""dropdown-divider""></li>
                                        <li><a class=""dropdown-item"" target=""_blank"" href=""#"" id=""btnDownloadLink""> <i class=""bi bi-envelope-paper-heart-fill"" style=""font-size: 1rem; color: crimson;""></i> Download Link</a></li>
                                    </ul>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end file upload box -->
            <!-- start how work tools -->
            <div class=""section main-how-wor");
            WriteLiteral(@"k-tools-box"">
                <div class=""row justify-content-center text-center"">


                    <div class=""col-12 mb-5"">

                        <h2>How To Compress Pdf Online for Free</h2>
                        <p>You are only 3 steps away from compress pdf file</p>
                    </div>

                    <div class=""main-how-work-tools-content"">
                        <div class=""row align-items-center text-center"">

                            <!-- how work tools step 1 -->
                            <div class=""col-12 col-lg-4"">
                                <div class=""work-tools-step-card"">
                                    <div class=""step-card-counter"">
                                        <div class=""counter rounded-circle"">1</div>
                                    </div>

");
#nullable restore
#line 208 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                     if (ViewBag.ThreeStepHelp.Success)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"step-card-body\">\n                                            ");
#nullable restore
#line 211 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                       Write(ViewBag.ThreeStepHelp.Enything.Step1);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                                        </div>\n");
#nullable restore
#line 213 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        <div class=""step-card-body"">
                                            By clicking on the large box above, you can select the desired file from the files in your system, and it is acceptable if the file has the correct format
                                        </div>
");
#nullable restore
#line 219 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                </div>
                            </div>

                            <!-- how work tools step 2 -->
                            <div class=""col-12 col-lg-4"">
                                <div class=""work-tools-step-card"">
                                    <div class=""step-card-counter"">
                                        <div class=""counter rounded-circle"">2</div>
                                    </div>
                                    <div class=""step-card-body"">
");
#nullable restore
#line 230 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                         if (ViewBag.ThreeStepHelp.Success)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <div class=\"step-card-body\">\n                                                ");
#nullable restore
#line 233 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                           Write(ViewBag.ThreeStepHelp.Enything.Step2);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                                            </div>\n");
#nullable restore
#line 235 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                            <div class=""step-card-body"">
                                                Using the buttons below the large box, you can upload the file to start the process or go back to the previous step to change the file
                                            </div>
");
#nullable restore
#line 241 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    </div>
                                </div>
                            </div>

                            <!-- how work tools step 3 -->
                            <div class=""col-12 col-lg-4"">
                                <div class=""work-tools-step-card"">
                                    <div class=""step-card-counter"">
                                        <div class=""counter rounded-circle"">3</div>
                                    </div>
                                    <div class=""step-card-body"">

");
#nullable restore
#line 254 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                         if (ViewBag.ThreeStepHelp.Success)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <div class=\"step-card-body\">\n                                                ");
#nullable restore
#line 257 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                           Write(ViewBag.ThreeStepHelp.Enything.Step3);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                                            </div>\n");
#nullable restore
#line 259 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                            <div class=""step-card-body"">
                                                Processing does not take much time. After a few minutes, you can download the output file in 4 ways
                                            </div>
");
#nullable restore
#line 265 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n");
#nullable restore
#line 272 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                     if (ViewBag.ThreeStepHelp.Enything.VideoName != null)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <h3>Video tutorial on how to Compress PDF</h3>\n                        <p>In this video, you will learn how to Compress PDF file in a few minutes</p>\n");
#nullable restore
#line 276 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                        string posterName = "How-to-compress-PDF-files-online.jpg";

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <video");
            BeginWriteAttribute("poster", " poster=\"", 16470, "\"", 16555, 3);
#nullable restore
#line 277 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 16479, Common.GetPath.GetHelpVideoPath().Replace("wwwroot", ""), 16479, 57, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16536, "/poster/", 16536, 8, true);
#nullable restore
#line 277 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 16544, posterName, 16544, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" alt=\"Help Video\" title=\"Video tutorial on working with tools\"");
            BeginWriteAttribute("style", " style=\"", 16618, "\"", 16749, 9);
            WriteAttributeValue("", 16626, "width:", 16626, 6, true);
#nullable restore
#line 277 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue(" ", 16632, Common.GetPath.GetVideoSize(), 16633, 30, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16663, ";", 16663, 1, true);
            WriteAttributeValue(" ", 16664, "max-height:", 16665, 12, true);
#nullable restore
#line 277 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue(" ", 16676, Common.GetPath.GetVideoSize(), 16677, 30, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16707, ";", 16707, 1, true);
            WriteAttributeValue(" ", 16708, "position:center;", 16709, 17, true);
            WriteAttributeValue(" ", 16725, "background-color:", 16726, 18, true);
            WriteAttributeValue(" ", 16743, "#000;", 16744, 6, true);
            EndWriteAttribute();
            WriteLiteral(" controls>\n");
#nullable restore
#line 278 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                             foreach (var item in Common.Formating.VideosFormat)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <source");
            BeginWriteAttribute("src", " src=\"", 16911, "\"", 17016, 3);
#nullable restore
#line 280 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 16917, Common.GetPath.GetHelpVideoPath().Replace("wwwroot", ""), 16917, 57, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16974, "/", 16974, 1, true);
#nullable restore
#line 280 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 16975, ViewBag.ThreeStepHelp.Enything.VideoName, 16975, 41, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("type", " type=\"", 17017, "\"", 17035, 2);
            WriteAttributeValue("", 17024, "video/", 17024, 6, true);
#nullable restore
#line 280 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 17030, item, 17030, 5, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\n");
#nullable restore
#line 281 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            Your browser does not support the video display\n                        </video>\n");
#nullable restore
#line 284 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\n            </div>\n            <!-- end how work tools -->\n           \n            <!-- start other content -->\n            ");
#nullable restore
#line 290 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
       Write(await Component.InvokeAsync("GetAdditionalHelp",Domain.Entities.Features.Optimizers.CompressPdf));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n            <!-- end other content -->\n\n            <!-- start section main services info box -->\n            ");
#nullable restore
#line 294 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
       Write(await Component.InvokeAsync("GetHelpContext",Model));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n            <!-- end section main services info box -->\n\n            <!--start blog posts slides-->\n            ");
#nullable restore
#line 298 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
       Write(await Component.InvokeAsync("GetBlogPosts", @Domain.Entities.Features.Optimizers.CompressPdf));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n            <!--end blog posts slides-->\n            <!-- end section main services info box -->\n            ");
#nullable restore
#line 301 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
       Write(await Component.InvokeAsync("GetTools"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n            ");
#nullable restore
#line 302 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
       Write(await Component.InvokeAsync("GetFAQ",ViewBag.FAQ));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            <!-- start sectin main people say about us -->
            <div class=""section main-people-say-about-us"">
                <div class=""row justify-content-center text-center"">
                    <div class=""col-7"">
                        <h3>The Best Online PDF Compression</h3>
                        <h4>Some User Comments</h4>
                    </div>

                    <div class=""main-people-saying-content"">
                        <div class=""row justify-content-center text-center"">
                            <div class=""col-7"">
                                <div id=""carouselExampleIndicators"" class=""carousel carousel-dark slide"" data-bs-ride=""carousel"">
                                    <div class=""carousel-indicators"">
");
#nullable restore
#line 316 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                         if (ViewBag.Comments.Success)
                                        {
                                            int cvv = 0;
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 319 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                             for (int i = 1; i <= ViewBag.Comments.Enything.Count; i++)
                                            {
                                                if (cvv == 0)
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"");
#nullable restore
#line 323 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                                                                                   Write(cvv);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" class=\"active\" aria-current=\"true\"");
            BeginWriteAttribute("aria-label", " aria-label=\"", 19393, "\"", 19414, 2);
            WriteAttributeValue("", 19406, "Slide", 19406, 5, true);
#nullable restore
#line 323 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue(" ", 19411, i, 19412, 2, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("></button>\n");
#nullable restore
#line 324 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                }
                                                else
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"");
#nullable restore
#line 327 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                                                                                   Write(cvv);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"");
            BeginWriteAttribute("aria-label", " aria-label=\"", 19720, "\"", 19741, 2);
            WriteAttributeValue("", 19733, "Slide", 19733, 5, true);
#nullable restore
#line 327 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue(" ", 19738, i, 19739, 2, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("></button>\n");
#nullable restore
#line 328 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                }
                                                cvv += 1;
                                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 330 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                             
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    </div>\n\n                                    <div class=\"carousel-inner\">\n");
#nullable restore
#line 335 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                         if (ViewBag.Comments.Success)
                                        {
                                            int cv = 1;
                                            string classname = "";
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 339 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                             foreach (var item in ViewBag.Comments.Enything)
                                            {
                                                classname = cv == 1 ? "carousel-item active" : "carousel-item";

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <div");
            BeginWriteAttribute("class", " class=\"", 20597, "\"", 20615, 1);
#nullable restore
#line 342 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 20605, classname, 20605, 10, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\n");
#nullable restore
#line 343 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                      
                                                        cv = 0;
                                                    

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    <div class=\"people-saying-card\">\n                                                        <h5 class=\"person-fullname\">");
#nullable restore
#line 347 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                               Write(item.UserName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\n                                                        <div class=\"person-rate\">\n");
#nullable restore
#line 349 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                             for (int i = 1; i <= 5; i++)
                                                            {
                                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 351 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                 if (item.Rate + 1 >= i)
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <i class=\"bi bi-star-fill\" data-rating=\"");
#nullable restore
#line 353 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                                                       Write(i);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"></i>\n");
#nullable restore
#line 354 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                }
                                                                else
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <i class=\"bi bi-star\" data-rating=\"");
#nullable restore
#line 357 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                                                  Write(i);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"></i>\n");
#nullable restore
#line 358 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 358 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                                 
                                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        </div>\n                                                        <p>");
#nullable restore
#line 361 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                                      Write(item.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\n                                                    </div>\n                                                </div>\n");
#nullable restore
#line 364 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 364 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                                             
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end sectin main people say about us -->
        </div>
        <!-- end home main -->
    </div>
</main>
<!-- end main -->
<!-- start rate this page -->
");
#nullable restore
#line 380 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
Write(await Component.InvokeAsync("GetRatingPart"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<!-- end rate this page -->\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\n<!-- script -->\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d9d7dad59173e388baaeca787c8b662621d7262c53087", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d9d7dad59173e388baaeca787c8b662621d7262c54182", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d9d7dad59173e388baaeca787c8b662621d7262c55277", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d9d7dad59173e388baaeca787c8b662621d7262c56372", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n\n<script");
                BeginWriteAttribute("src", " src=\"", 23158, "\"", 23252, 2);
                WriteAttributeValue("", 23164, "https://www.google.com/recaptcha/api.js?render=", 23164, 47, true);
#nullable restore
#line 392 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
WriteAttributeValue("", 23211, GoogleCaptchaConfig.Value.Google_SiteKey, 23211, 41, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral("></script>\n\n<script>\n    grecaptcha.ready(function () {\n        grecaptcha.execute(\'");
#nullable restore
#line 396 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                       Write(GoogleCaptchaConfig.Value.Google_SiteKey);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"', { action: 'submit' }).then(function (token) {
            document.getElementById(""cpth"").value = token;
        });
    });
</script>


<script>
    // rating page
    const ratingStars = [...document.getElementsByClassName(""rating__star"")];

    function executeRating(stars) {
        const starClassActive = ""rating__star bi bi-star-fill"";
        const starClassInactive = ""rating__star bi bi-star"";
        const starsLength = stars.length;
        let i;
        stars.map((star) => {
            star.onclick = () => {
                i = stars.indexOf(star);

                if (star.className === starClassInactive) {
                    for (i; i >= 0; --i) stars[i].className = starClassActive;
                } else {
                    for (i; i < starsLength; ++i) stars[i].className = starClassInactive;
                }
            };
        });
    }
    executeRating(ratingStars);

</script>

<script>
dropContainer.ondragover = dropContainer.ondragenter = function(evt) {
  evt.preventDefault();");
                WriteLiteral(@"
};

dropContainer.ondrop = function(evt) {
  // pretty simple -- but not for IE :(
  _upload.files = evt.dataTransfer.files;

  // If you want to use some of the dropped files
  const dT = new DataTransfer();
  dT.items.add(evt.dataTransfer.files[0]);
  dT.items.add(evt.dataTransfer.files[3]);
  _upload.files = dT.files;

  evt.preventDefault();
};
</script>
<script>
    var FileName = """";
    var Id = """";

    function Loading(State) {
        try {
            if (State == true) {
                document.getElementById(""btnUpdateFiles"").click();
                document.getElementById(""_Loading"").style.display = ""unset"";
            }
            else {
                document.getElementById(""_Loading"").style.display = ""none"";
            }
        }
        catch { }
    }

    function SelectFile(State) {
        if (State == true) {
            document.getElementById(""triggerFile"").setAttribute('onclick', 'select()');
            document.getElementById(""headertriggerFile"").style.cursor = ""pointer"";
");
                WriteLiteral(@"        }
        else {
            document.getElementById(""triggerFile"").setAttribute('onclick', '');
            document.getElementById(""headertriggerFile"").style.cursor = ""wait"";
            var old_element = document.getElementById(""triggerFile"");
            var new_element = old_element.cloneNode(true);
            old_element.parentNode.replaceChild(new_element, old_element);

        }
    }

    function Download(State, OutFile, Id) {
        if (State == true) {
            document.getElementById(""_Download"").style.display = ""inherit"";
            document.getElementById(""btnDownload"").href = ""/Downloader/DownloadFile?OutFileName="" + OutFile + ""&Id="" + Id + ""&LogService="" + document.getElementById(""_BaseService"").textContent + """";
            document.getElementById(""btnDownloadLink"").href = ""/download-link?OutFileName="" + OutFile + ""&Id="" + Id + ""&LogService="" + document.getElementById(""_BaseService"").textContent + """";
        }
        else {
            document.getElementById(""_Download"").st");
                WriteLiteral(@"yle.display = ""none"";
            document.getElementById(""btnDownload"").href = ""#"";
            document.getElementById(""btnDownloadLink"").href = ""#"";
        }
    }

    function OtherRowUpload(State) {
        if (State == true) {
            document.getElementById(""drop"").style.visibility = ""visible"";
        }
        else {
            document.getElementById(""drop"").style.visibility = ""hidden"";
        }
    }

    async function SendData() {
        var File = document.getElementById(""_upload"");
        var Filter = /(\.pdf|\.)$/i;
        if (!Filter.exec(File.value)) {
            swal.fire
                (
                    ""warning"",
                    ""File Format Invalid"",
                    ""warning""
                );
            return;
        }
        var formData = new FormData();
        formData.append(""file"", File.files[0]);
        formData.append(""Recaptcha"", document.getElementById(""cpth"").value);
        Loading(true);
        SelectFile(false);
        Download(false);
    ");
                WriteLiteral(@"    OtherRowUpload(false);
        await fetch('/Optimize/CompressPdfUpoad/', {
            method: ""POST"",
            body: formData
        })
            .then(response => response.json())
            .then((data) => {
                Loading(false);
                SelectFile(true);
                if (data.success) {
                    Download(true, data.enything.outFileName, data.enything.id);
                    FileName = data.enything.outFileName;
                    Id = data.enything.id;
                    document.getElementById(""InpSize"").textContent = data.enything.inputFileSize;
                    document.getElementById(""OutSize"").textContent = data.enything.outFileSize;
                }
                else {
                    OtherRowUpload(true);
                    swal.fire(
                        ""warning"",
                        data.message,
                        ""warning""
                    );
                }
            })
    }

    async function SubmitEmail() {
    ");
                WriteLiteral(@"    var Data = new FormData();
        Data.append(""FId"", Id);
        Data.append(""OutFileName"", FileName);
        Data.append(""UserEmail"", document.getElementById('UserEmail').value);

        await fetch('/Optimize/SendFileToEmail/', {
            method: ""POST"",
            body: Data
        })
            .then(response => response.json())
            .then((data) => {
                if (data.success) {
                    swal.fire(
                        ""success"",
                        data.message,
                        ""success""
                    );
                }
                else {
                    swal.fire(
                        ""warning"",
                        data.message,
                        ""warning""
                    );
                }
            })
    }

    async function SendMessage() {
        var Data = new FormData();
        Data.append(""UserEmail"", document.getElementById(""Emailaddress"").value);
        Data.append(""UserName"", document.getElementById");
                WriteLiteral(@"(""FullName"").value);
        Data.append(""Message"", document.getElementById(""Message"").value);
        Data.append(""Recaptcha"", document.getElementById(""cpth"").value);
        Data.append(""Service"", document.getElementById(""_Service"").textContent);

        var rate = document.getElementsByClassName(""rating__star bi bi-star-fill"").length;
        if (rate == 0) { rate = null; }
        Data.append(""Rate"", rate);

        await fetch('/Optimize/UserMessage/', {
            method: ""POST"",
            body: Data
        })
            .then(response => response.json())
            .then((data) => {
                if (data.success) {
                    document.getElementById(""Emailaddress"").value = """";
                    document.getElementById(""FullName"").value = """";
                    swal.fire(
                        ""success"",
                        data.message,
                        ""success""
                    );
                }
                else {
                    swal.fire(
           ");
                WriteLiteral("             \"warning\",\n                        data.message,\n                        \"warning\"\n                    );\n                }\n            })\n    }\n\n    function select() {\n        grecaptcha.execute(\'");
#nullable restore
#line 612 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
                       Write(GoogleCaptchaConfig.Value.Google_SiteKey);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"', { action: 'submit' }).then(function (token) {
            document.getElementById(""cpth"").value = token;
        });

        Download(false);
        Loading(false);
        OtherRowUpload(true);

        $(""#_upload"").click();
    }

    function CancelProcess() {
        location.reload();
    }
</script>
");
            }
            );
#nullable restore
#line 628 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
  
        string basic = Domain.Entities.Features.Optimizers.CompressPdf + ".json";
    string SchemaFile = Common.Formating.StandardFaqSchemaFileName + basic;
    string SchemaHowToFile = Common.Formating.StandardHowToSchemaFileName + basic;
    string SchemaVideoFile = Common.Formating.StandardVideoSchemaFileName + basic;

#line default
#line hidden
#nullable disable
            DefineSection("Schemas", async() => {
                WriteLiteral("\n                        <script type=\"application/ld+json\">\n        ");
#nullable restore
#line 636 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
   Write(Html.Raw(Common.Schema.SchemaReader.ReadToEnd(SchemaFile,true,Common.Schema.SchemaType.Faq)));

#line default
#line hidden
#nullable disable
                WriteLiteral("\n        ");
#nullable restore
#line 637 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
   Write(Html.Raw(Common.Schema.SchemaReader.ReadToEnd(SchemaHowToFile,true,Common.Schema.SchemaType.HowTo)));

#line default
#line hidden
#nullable disable
                WriteLiteral("\n        ");
#nullable restore
#line 638 "D:\C#\Web\Core\PdfConverter\EndPoint\Views\Optimize\CompressPdf.cshtml"
   Write(Html.Raw(Common.Schema.SchemaReader.ReadToEnd(SchemaVideoFile,true,Common.Schema.SchemaType.Video)));

#line default
#line hidden
#nullable disable
                WriteLiteral("\n                            </script>\n");
            }
            );
            WriteLiteral("\n");
            DefineSection("Modals", async() => {
                WriteLiteral(@"
<!-- Modal Add Email -->
<div class=""modal fade"" id=""AddEmail"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <p class=""modal-title"" id=""exampleModalLongTitle"">Send To Email</p>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                <div class=""col-xl-12 col-lg-12 col-md-12 mb-1"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d9d7dad59173e388baaeca787c8b662621d7262c69358", async() => {
                    WriteLiteral(@"
                        <fieldset class=""form-group"">

                            <input type=""text"" class=""form-control"" id=""OutName"" style=""visibility:hidden"">
                            <label for=""basicInput"">YourEmail</label>
                            <input type=""email"" class=""form-control"" id=""UserEmail"" placeholder=""PdfConverter@example.com"" required>
                            <input type=""text"" class=""form-control"" id=""FId"" style=""visibility:hidden"">
                        </fieldset>
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
            </div>
            <div class=""modal-footer"">
                <a class=""btn btn-secondary"" data-bs-dismiss=""modal"">Cancel</a>
                <a class=""btn btn-primary"" data-bs-dismiss=""modal"" onclick=""SubmitEmail()"">Submit</a>
            </div>
        </div>
    </div>
</div>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.Extensions.Options.IOptions<EndPoint.Models.GoogleCaptchaConfigModel> GoogleCaptchaConfig { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Common.ResultMessage<Application.Services.Query.ReturnFeatureDetails.ResultReturnFeatureDetailsDto>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
